let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Developer/Annotate
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +5 src/screens/home/Root.tsx
badd +23 ~/Developer/Annotate/src/screens/App.tsx
badd +1 ~/Developer/Annotate/src/appwrite/client.ts
badd +1 ~/Developer/Annotate/src/appwrite/authentication.ts
badd +20 ~/Developer/Annotate/src/storage/StorageContext.tsx
badd +71 ~/Developer/Annotate/src/storage/WebStorage/FileSystem.ts
badd +18 ~/Developer/Annotate/src/storage/useStorageHook.tsx
badd +5 src/authentication/AuthenticationProvider.tsx
badd +1 ~/Developer/Annotate/todo.md
badd +3 ~/Developer/Annotate/.philosophy
badd +1 ~/Developer/Annotate/.million/store.json
badd +22 ~/Developer/Annotate/tsconfig.json
badd +27 ~/Developer/Annotate/vite.config.js
badd +2 ~/Developer/Annotate/tailwind.config.js
badd +1 ~/Developer/Annotate/package.json
badd +2 ~/Developer/Annotate/output.css
badd +0 ~/Developer/Annotate/src/storage/WeebStorage/FileSystem.ts
badd +1 ~/Developer/Annotate/src/storage/default_storage.ts
badd +1 ~/Developer/Annotate/src/storage/storage.types.ts
badd +0 ~/Developer/Annotate/src/storage/webStorage/LocalStorage.ts
badd +1 ~/Developer/Annotate/src/storage/defaultStorage.ts
argglobal
%argdel
$argadd oil:///Users/shivamrawat/Developer/Annotate/
argglobal
enew
file oil:///Users/shivamrawat/Developer/Annotate/src/storage/
balt src/authentication/AuthenticationProvider.tsx
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
